/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package unisystems.gui;

import java.awt.event.ActionEvent;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import observer.IObserver;
import unisystems.Administrator;
import unisystems.Staff;
import unisystems.UniSystems;

/**
 *
 * @author Joseph Kellaway, Alex Murphy and Zakaria Robinson
 */
public class JFLogin extends javax.swing.JFrame {
    
    /**
     * Creates new form UniSystems
     */
    public JFLogin() {
        initComponents();
        this.txtUsername.addActionListener(action);
        this.jpwfPassword.addActionListener(action);
        loadUniSystemsData();
        //uniSystem.createTestData();
    }
    
    Action action = new AbstractAction() {
        @Override
        public void actionPerformed(ActionEvent e) {
            login();
        }
    };

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtUsername = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnLogin = new javax.swing.JButton();
        jpwfPassword = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Username:");

        jLabel2.setText("Password:");

        btnLogin.setText("Login");
        btnLogin.setFocusable(false);
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(12, 12, 12)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jpwfPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(txtUsername))
                .addGap(18, 18, 18)
                .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jpwfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadUniSystemsData() {
        //Load dialogue
        JFileChooser objFileDialogue = new JFileChooser();
        int intDialogResult = JFileChooser.CANCEL_OPTION;
        intDialogResult = objFileDialogue.showOpenDialog(this);
        
        //Test correct option chosen and open accordingly
        if (intDialogResult == JFileChooser.APPROVE_OPTION){
            File objFile = objFileDialogue.getSelectedFile();
            if (objFile.exists() && objFile.canRead()){
                
                try (ObjectInputStream objIn = new ObjectInputStream(
                    new BufferedInputStream(new FileInputStream(objFile))))
                {
                    Object objData = objIn.readObject();
                    UniSystems objNewUniSystems = (UniSystems)objData;
                    
                    if(objNewUniSystems != null){
                        try {
                            ArrayList<IObserver> objUniSystemsObservers = 
                                    UniSystems.getInstance().getObservers();

                            //De-register old observers
                            for (IObserver currObserver : objUniSystemsObservers){
                                UniSystems.getInstance().removeObserver(currObserver);
                            }

                            //Register new observers
                            for(IObserver currObserver : objUniSystemsObservers){
                                objNewUniSystems.registerObserver(currObserver);
                            }

                            UniSystems.getInstance().notifyObservers();
                        } catch (NullPointerException ex) {
                            
                        }
                    }else{
                        JOptionPane.showMessageDialog(this,"No UniSystems data found.",
                                "Error reading file.", JOptionPane.ERROR_MESSAGE);
                    }
                } catch(ClassNotFoundException | IOException | ClassCastException ex){
                    JOptionPane.showMessageDialog(this,
                            "Data file could not be read.", "Operation aborted.",
                            JOptionPane.ERROR_MESSAGE);
                }
            }else{
                    JOptionPane.showMessageDialog(this,
                        "File not found / unreadable.", "Error accessing file.",
                        JOptionPane.ERROR_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(this,"File load cancelled.",
                        "Operation aborted.", JOptionPane.INFORMATION_MESSAGE);
        }
    }
    
    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        login();
    }//GEN-LAST:event_btnLoginActionPerformed

    public void login(){
        char[] input = jpwfPassword.getPassword();
        Boolean incorrectDetails = true;
        
        if (txtUsername.getText().equals("superuser") && isSuperuser(input)){
            openHomeFrame(true, 0);
            incorrectDetails = false;
        }else{
            if (UniSystems.getInstance().getStaffList().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Incorrect login details.", "Invalid login.", JOptionPane.WARNING_MESSAGE);
            } else {
                for (Staff staff : UniSystems.getInstance().getStaffList()) {
                    if (staff instanceof Administrator){
                        if (staff.getiD().toString().equals(txtUsername.getText())){
                            char[] password = ((Administrator) staff).getPassword().toCharArray();
                            if (isCorrectPassword(input, password)){
                                openHomeFrame(false, staff.getiD());
                                incorrectDetails = false;
                                break;
                            }
                        }
                    }
                }
            }
        }
        if (incorrectDetails){
            JOptionPane.showMessageDialog(this, "Incorrect login details.", "Invalid login.", JOptionPane.WARNING_MESSAGE);
        }
        cleanPassword(input);
    }

    private void openHomeFrame(boolean superuser, Integer login){
        JFHome objWindow = new JFHome();
        objWindow.setUniSystem(UniSystems.getInstance());
        objWindow.setLogin(login);
        objWindow.setVisible(true);
        objWindow.buttonVisibility(superuser);
        this.dispose();
    }
    
    private boolean isSuperuser(char[] input) {
        boolean isCorrect = false;
        char[] correctPassword = { 'p', 'a', 's', 's', 'w', 'o', 'r', 'd'};

        if (input.length == correctPassword.length) {
            isCorrect = Arrays.equals(input, correctPassword);
        }
        cleanPassword(correctPassword);

        return isCorrect;
    }
    
    private boolean isCorrectPassword(char[] input, char[] password){
        boolean isCorrect = false;
            if (input.length == password.length){
                isCorrect = Arrays.equals(input, password);
            }
        cleanPassword(password);
            
        return isCorrect;
    }
    
    private void cleanPassword(char[] charArray){
        for (char a : charArray){
            a = 'z';
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFLogin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPasswordField jpwfPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}